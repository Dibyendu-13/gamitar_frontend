{"ast":null,"code":"var _jsxFileName = \"/Users/dibyendubar/gamitar/frontend/src/components/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:4000\");\nconst Grid = () => {\n  _s();\n  const [grid, setGrid] = useState(Array(10).fill(Array(10).fill(\"\")));\n  const [playerCount, setPlayerCount] = useState(0);\n  const [canUpdate, setCanUpdate] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [showingHistory, setShowingHistory] = useState(false);\n  useEffect(() => {\n    // Listen for updates and player count from the server\n    socket.on(\"grid-update\", updatedGrid => setGrid(updatedGrid));\n    socket.on(\"player-count\", count => setPlayerCount(count));\n    socket.on(\"grid-history\", updateHistory => setHistory(updateHistory));\n    socket.on(\"grouped-updates\", groupedBatch => {\n      console.log(\"Grouped Updates:\", groupedBatch);\n    });\n    return () => {\n      socket.off(\"grid-update\");\n      socket.off(\"player-count\");\n      socket.off(\"grid-history\");\n      socket.off(\"grouped-updates\");\n    };\n  }, []);\n  const handleBlockClick = (row, col) => {\n    if (!canUpdate || grid[row][col]) return;\n    const unicodeChar = prompt(\"Enter a Unicode character:\");\n    if (!unicodeChar) return;\n    socket.emit(\"update-grid\", {\n      row,\n      col,\n      char: unicodeChar\n    });\n    setCanUpdate(false);\n\n    // Optional: 1-minute restriction\n    setTimeout(() => setCanUpdate(true), 60000);\n  };\n  const toggleHistory = () => {\n    setShowingHistory(!showingHistory);\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hour12: true\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Multiplayer Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"player-count\",\n      children: [\"Players Online: \", playerCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-button\",\n      onClick: toggleHistory,\n      children: showingHistory ? \"Hide History\" : \"Show History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), showingHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Update History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: history.map((update, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"history-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Row:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), \" \", update.row, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Col:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 55\n            }, this), \" \", update.col]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Char:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), \" \", update.char]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), \" \", formatTimestamp(update.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((block, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid-block ${block ? \"filled\" : \"\"}`,\n          onClick: () => handleBlockClick(rowIndex, colIndex),\n          children: block\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"sLnz0lTV2Xp5cTbJij7akYdAfCg=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Grid","_s","grid","setGrid","Array","fill","playerCount","setPlayerCount","canUpdate","setCanUpdate","history","setHistory","showingHistory","setShowingHistory","on","updatedGrid","count","updateHistory","groupedBatch","console","log","off","handleBlockClick","row","col","unicodeChar","prompt","emit","char","setTimeout","toggleHistory","formatTimestamp","timestamp","date","Date","options","year","month","day","hour","minute","second","hour12","Intl","DateTimeFormat","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","update","index","rowIndex","block","colIndex","_c","$RefreshReg$"],"sources":["/Users/dibyendubar/gamitar/frontend/src/components/Grid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./Grid.css\";\n\nconst socket = io(\"http://localhost:4000\");\n\nconst Grid = () => {\n  const [grid, setGrid] = useState(Array(10).fill(Array(10).fill(\"\")));\n  const [playerCount, setPlayerCount] = useState(0);\n  const [canUpdate, setCanUpdate] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [showingHistory, setShowingHistory] = useState(false);\n\n  useEffect(() => {\n    // Listen for updates and player count from the server\n    socket.on(\"grid-update\", (updatedGrid) => setGrid(updatedGrid));\n    socket.on(\"player-count\", (count) => setPlayerCount(count));\n    socket.on(\"grid-history\", (updateHistory) => setHistory(updateHistory));\n    socket.on(\"grouped-updates\", (groupedBatch) => {\n      console.log(\"Grouped Updates:\", groupedBatch);\n    });\n\n    return () => {\n      socket.off(\"grid-update\");\n      socket.off(\"player-count\");\n      socket.off(\"grid-history\");\n      socket.off(\"grouped-updates\");\n    };\n  }, []);\n\n  const handleBlockClick = (row, col) => {\n    if (!canUpdate || grid[row][col]) return;\n\n    const unicodeChar = prompt(\"Enter a Unicode character:\");\n    if (!unicodeChar) return;\n\n    socket.emit(\"update-grid\", { row, col, char: unicodeChar });\n    setCanUpdate(false);\n\n    // Optional: 1-minute restriction\n    setTimeout(() => setCanUpdate(true), 60000);\n  };\n\n  const toggleHistory = () => {\n    setShowingHistory(!showingHistory);\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hour12: true,\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Multiplayer Grid</h1>\n      <h3 className=\"player-count\">Players Online: {playerCount}</h3>\n      <button className=\"toggle-button\" onClick={toggleHistory}>\n        {showingHistory ? \"Hide History\" : \"Show History\"}\n      </button>\n      {showingHistory && (\n        <div className=\"history\">\n          <h4>Update History:</h4>\n          <ul>\n            {history.map((update, index) => (\n              <li key={index} className=\"history-item\">\n                <span>\n                  <strong>Row:</strong> {update.row}, <strong>Col:</strong>{\" \"}\n                  {update.col}\n                </span>\n                <span>\n                  <strong>Char:</strong> {update.char}\n                </span>\n                <span>\n                  <strong>Time:</strong> {formatTimestamp(update.timestamp)}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"grid\">\n        {grid.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"grid-row\">\n            {row.map((block, colIndex) => (\n              <div\n                key={colIndex}\n                className={`grid-block ${block ? \"filled\" : \"\"}`}\n                onClick={() => handleBlockClick(rowIndex, colIndex)}\n              >\n                {block}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Grid;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}